@page
@model AdminUI.Pages.Admin.UserFeedbackModel
@{
    ViewData["Title"] = "Quản lý phản hồi người dùng";
}

<div class="container mt-4">
    <h2 class="mb-4">💬 Quản lý phản hồi người dùng</h2>

    <form method="post" id="antiForgeryForm">
        @Html.AntiForgeryToken()
    </form>

    <table class="table table-bordered table-hover align-middle">
        <thead class="table-light">
            <tr>
                <th>ID</th>
                <th>Người gửi</th>
                <th>Email</th>
                <th>Nội dung</th>
                <th>Ngày gửi</th>
                <th>Hành động</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.FeedbackList.Any())
            {
                foreach (var fb in Model.FeedbackList)
                {
                    <tr>
                        <td>@fb.UserID</td>
                        <td>@fb.FullName</td>
                        <td>@fb.Email</td>
                        <td>@fb.Description</td>
                        <td>@fb.SubmittedDate.ToString("dd/MM/yyyy HH:mm")</td>
                        <td>
                            <button class="btn btn-sm btn-outline-danger" onclick="deleteFeedbackByUser(@fb.UserID)">
                                <i class="bi bi-trash"></i> Xóa
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6" class="text-center">Không có phản hồi nào.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    
    <script>
       
        async function deleteFeedbackByUser(userId) {
            if (!confirm("Bạn có chắc chắn muốn xóa phản hồi này không?")) return;

            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            const res = await fetch('/Admin/UserFeedback?handler=Delete', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                },
                body: JSON.stringify({ userId: userId })
            });

            const data = await res.json();
            if (res.ok && data.success) {
                // Xóa thành công thì reload luôn (client không gọi hub invoke)
                // Backend sẽ gọi hub để notify các client khác (nếu cần)
                Swal.fire('Đã xoá!', 'Phản hồi đã được xóa.', 'success')
                    .then(() => location.reload());
            } else {
                alert("Lỗi xoá phản hồi");
            }
        }
    </script>
}
